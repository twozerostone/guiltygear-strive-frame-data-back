# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the staging branch
  push:
    branches: [ staging ]
  pull_request:
    branches: [ staging ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCE_INSTANCE: staging-backend
  GCE_INSTANCE_ZONE: asia-northeast3-a
  GITHUB_ACTION: true
  DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
  DJANGO_SETTINGS_MODULE: core.settings.local

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04
    
    services:
      psqldb:
        image: postgres
        env:
          POSTGRES_DB: ggst
          POSTGRES_USER: zerostone
          POSTGRES_PASSWORD: zerostone
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_INITDB_ARGS=--encoding: UTF-8
        ports:
          - 5432:5432
      redis:
        image: redis:5.0.5
        ports:
          - 6379:6379

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Python setting
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
  
      - name: PIP install
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r config/app/requirements.txt
        
      - name: Start python test
        run: |
          pytest GGST_framedata
